
Answer the following questions


1) What is an instance variable?
variables that belong to an instance of a class;

2) How do you create a new object?
classname objname = new classname;

3) After creating a new object, how do you set that objects instance variables?
objname.instance variable = x;
private: object.setMethod();

4) What is a reference variable? Why do you need to be careful with reference variables?
a variable is any variable that points to an object. because if you change one you change all insyances

5) How many methods can you have in a class?
infinite

6) How do you exit a method at any point?
return

7) What is the method signature required to return an "int" from a method?
int method(){}

8) Assuming "int num = 10", what is the syntax to return "num" from a method?
return num;

9) How do you pass a parameter to a method?
method (parameter){}

10) What is the method signature for a method named sum() that takes two int parameters and returns their sum as in int?
Sum(int a, int b){return a + b}

11) What is a constructor?
a member of a class that creates an object of a class

12) How does Java treat a class without a constructor?
gives it a default


13) What would the constructor for "public class Animal" look like?
public Animal(){}

14) What is the effect of passing parameters to a constructor?
assigning instance variables for that object


15) When should you pass parameters to a constructor?
when you want to assign variables to that object


16) What does the finalize() method do?
releases objects or variables after they are used.

17) What does the "this" keyword do?
allows you to refer to members of the class it is in.

18) When should you use the "this" keyword?
constructors and getters and setters

19) Write an example of the "this" keyword in action.
getExample(int test){ this.test = test}

20.) EXplain the difference between static and non-static variables.
static can be accessed without creating an object of the class. non-static belongs to the objects of that class.

21.) Explain the difference between static and non-static methods.
static methods are owned by the class but not of objects.
non-static:
getter/setter
static method:
Math()
